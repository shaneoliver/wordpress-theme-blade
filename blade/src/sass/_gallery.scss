/**
 * Lightcase settings
 *
 * Note: Override default settings for your project without touching this source code by simply
 * defining those variables within a SASS map called '$lightcase-custom'.
 *
 * // Example usage
 * $lightcase-custom: (
 *   'breakpoint': 768px
 * );
 */
 $lightcase-default: (
    'font-path': '../fonts/', // Path relative to the compiled css file
  
    'breakpoint': 768px,
  
    'overlay-color': #333,
  
    'case-background': #fff,
    'case-background-media': #333,
  
    'icon-font-size': 38px,
    'icon-color': rgba(255, 255, 255, 0.6),
    'icon-color-hover': rgba(255, 255, 255, 1),
  
    'title-font-size': 17px,
    'title-color': #aaa,
  
    'caption-font-size': 13px,
    'caption-color': #aaa,
  
    'sequenceInfo-font-size': 11px,
    'sequenceInfo-color': #aaa,
  
    'text-shadow': 0 0 10px rgba(0, 0, 0, 0.5),
    'text-color-viewport-small': #aaa,
    'text-color-viewport-large': #333
  );
  
  $lightcase-custom: ();
//   $lightcase-settings: map-merge($lightcase-default, $lightcase-custom);

@import '~lightcase/src/scss/lightcase';

// Image and Gallery Gutenberg blocks
figure {
    position: relative;

    figcaption {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        padding: 1rem !important;
        margin: 0 !important;
        background-color: rgba($black, .25) !important;
        color: $white !important;
        text-align: left !important;
        font-family: $font-family-base !important;
    }
}

// We will define what a gallery looks like on browsers
// that do not have grid support. This doesn't support all columns choices
.gallery {
    display: flex; flex-wrap: wrap;
    margin: 0 -20px;

    .gallery-item {
        position: relative;
        margin-bottom: 20px;
        padding: 0 20px;
        width: 100%;
        overflow: hidden;

        @include media-breakpoint-up(xs) {
            width: 50%;
        }

        @include media-breakpoint-up(sm) {
            width: (100% / 3);
        }

        @include media-breakpoint-up(sm) {
            width: (100% / 4);
        }

        .gallery-caption {
            position: absolute; bottom: 0; left: 0; right: 0;
            padding: 1em;
            background-color: rgba($black, .5);
            color: white;
            z-index: 1;
        }

        &__overlay {
            position: absolute; top: 0; bottom: 0; left: 0; right: 0;
            height: 100%;
            background-color: rgba( black, .05 );
            opacity: 0;
            transition: opacity 500ms ease;
            pointer-events: none;

            .fa-plus {
                color: $white;
            }
        }

        &:hover {
            .gallery-item__overlay {
                opacity: 1;

                &::before {
                    transform: translate( -50%, -50% ) scale(1);
                }
            }
        }
    }
}

// If a browser supports grid, we create a
@supports (display:grid) {

    .gallery {
        display: grid;
        grid-gap: 20px;
        margin: 0 0 20px;

        @for $i from 1 through 9 {
            &.gallery-columns-#{ $i } {
                grid-template-columns: repeat(2, 1fr);

                @include media-breakpoint-up(sm) {
                    grid-template-columns: repeat(3, 1fr);
                }
                @include media-breakpoint-up(md) {
                    grid-template-columns: repeat(#{$i}, 1fr);
                }
            }
        }

        // reset fallback styles
        .gallery-item {
            width: 100% !important;
            margin-bottom: 0;
            padding: 0;
        }
    }
}